import string
import random
import re


cod = 0
password = ""
size = 8

def create_password(size):
    caracters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(caracters) for _ in range(size))
    return password

def verify_password(password):
    if (re.search(r'.{8,}', password) and
            re.search(r'[A-Z]', password) and
            re.search(r'[a-z]', password) and
            re.search(r'\d', password) and
            re.search(r'[!@#$%^&*()_+{}|:"<>?]', password)):
            print("Sua senha é forte!")    
            return True
    else:
        print ("Sua senha é fraca!")
        return False
    
def treat_password(password):
    while not verify_password(password):
        password += random.choice(string.ascii_uppercase + 
                                  string.ascii_lowercase + 
                                  string.digits + 
                                  string.punctuation)
    return password

def show_menu(cod):
  print("1 - Criar uma senha segura?") 
  print("2 - Melhorar segurança da   senha?")
  print("3 - Verificar segurança da senha?")
  print("4 - sair do sistema?")
  return int(input("Selecione uma opção:"))

while(True):
 option = show_menu(cod)
 
 try:
   if (option == 1):
    print(create_password(size))
   elif ( option == 2):
    password = input("Digite a senha a ser tratada:")
    if (verify_password(password) == True):
        print("A senha é forte o suficiente!")
    else:    
        print(treat_password(password))
   elif (option == 3):
    password = input("Digite a senha a ser verificada:")
    if verify_password(password):
      print("Sua senha é forte!")
    else: ("Sua senha é fraca!")
   elif (option == 4):
    break
   else:
    print("Opção inválida!")
 except ValueError:
   print("Digite um número válido!")

            
            
